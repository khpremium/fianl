<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="mt">

	<select id="client" resultType="dto.ClientDTO">
		select * from client order by id
	</select>
	
	<delete id="clientDelete" parameterType="string">
		delete from client where id = #{id}
	</delete>
	
	<select id="clientChk" parameterType="string" resultType="int">
		select count(rv_num) from reservation where user_id = #{id}
		
	</select>
	
	<select id="clientUpdateSelect" parameterType="string" resultType="dto.ClientDTO">
		select * from client where id= #{id}
	</select>
	
	<update id="clientUpdate" parameterType="dto.ClientDTO">
		update client
		set pass=#{pass}, name=#{name}, phonenum=#{phonenum},
		email=#{email}, point=#{point}, gender=#{gender}, birth=#{birth}
		where id=#{id}
	</update>
	
	<insert id="clientInsert" parameterType="dto.ClientDTO">
		insert into client values(#{id}, #{pass}, #{name}, #{phonenum}, #{email}, #{point}, #{gender}, #{birth})
	</insert>
	
	<select id="boardTable" resultType="dto.DefaultBoardDTO">
		select * from board where b_category_c_num=2 order by b_num 
	</select>
	
	<select id="boardLikeResetPointSelect" parameterType="string" resultType="dto.ClientDTO">
		select * from client where id=#{user_id}
	</select>
	
	<update id="likeReset" parameterType="int">
		update board
		set b_like=0
		where b_category_c_num=2
	</update>
	
	<delete id="likeResetDelete" parameterType="string">
		delete from like_chk 
		where catnum=2
	</delete>
	
	<update id="boardLikeResetPoint" parameterType="dto.ClientDTO">
		update client
		set point=#{point}
		where id=#{id}		
	</update>
	
	
	<select id="airinfo" resultType="dto.AirinfoDTO">
		select * from airinfo order by flight
	</select>
	
	 <delete id="airinfoDelete" parameterType="string">
		delete from airinfo where flight = #{flight}
	</delete>
	
	<select id="airinfoChk" parameterType="string" resultType="int">
		select count(rv_num) from reservation where airinfo_flight = #{flight}
	</select>
	
	<select id="airinfoUpdateSelect" parameterType="string" resultType="dto.AirinfoDTO">
		select * from airinfo where flight=#{flight}
	</select>
	
	<update id="airinfoUpdate" parameterType="dto.AirinfoDTO">
		update airinfo
		set d_time=#{d_time}, a_time=#{a_time}, airline=#{airline},
		seatgrade=#{seatgrade}, price_ad=#{price_ad}, seat=#{seat}
		where flight=#{flight}
	</update>
	
	<insert id="airinfoInsert" parameterType="dto.AirinfoDTO">
		insert into airinfo values(#{flight}, #{airline}, #{d_time}, #{a_time},
		#{seatgrade}, #{price_ad}, 0, #{seat}, #{city_code_dep}, #{city_code_arv})
	</insert>
	
	<select id="reservation" resultType="dto.ReservationDTO">
		select * from reservation order by rv_num
	</select>
	
	<delete id="reservationDelete" parameterType="string">
		delete from reservation where rv_num = #{rv_num}
	</delete>
	
	<select id="reservationUpdateSelect" parameterType="string" resultType="dto.ReservationDTO">
		select * from reservation where rv_num=#{rv_num}
	</select>
	
	<update id="reservationUpdate" parameterType="dto.ReservationDTO">
		update reservation
		set payment_chk=#{payment_chk}, non_name=#{non_name, jdbcType=VARCHAR},
		non_gender=#{non_gender, jdbcType=VARCHAR}, non_phonenumber=#{non_phonenumber, jdbcType=VARCHAR},
		non_email=#{non_email, jdbcType=VARCHAR}, non_pass=#{non_pass, jdbcType=VARCHAR}, p_count=#{p_count}
		where rv_num=#{rv_num}
	</update>
	
	<insert id="reservationInsert" parameterType="dto.ReservationDTO">
		insert into reservation values(rv_num_seq.nextval, #{payment_chk},
		#{airinfo_flight}, #{user_id, jdbcType=VARCHAR}, #{non_name, jdbcType=VARCHAR},
		#{non_gender, jdbcType=VARCHAR}, #{non_phonenumber, jdbcType=VARCHAR},
		#{non_email, jdbcType=VARCHAR}, #{non_pass, jdbcType=VARCHAR},
		#{p_count}, #{rv_code})
	</insert>
	
	

</mapper>












